# -*- coding: utf-8 -*-
"""Diwalisales_Analysis_file.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1PrDd7MivO9yysmSQpEzVI39ispnzOdYi
"""

# Commented out IPython magic to ensure Python compatibility.
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
# %matplotlib inline
import seaborn as sns

df = pd.read_csv('Diwali Sales Data.csv', encoding='latin-1')
df.shape

df.head()

df.info()

df.drop(['Status', 'unnamed1'], axis =1, inplace=True)

pd.isnull(df)

pd.isnull(df).sum()

#drop null values
df.dropna(inplace=True)

# initialize list of lists
data_test = [['madhav', 11], ['Gopi',15], ['keshav',],['lalita', 16]]
# create the pandas dataframe using list
df_test = pd.DataFrame(data_test, columns = ['Name', 'Age'])
df_test

df_test.dropna(inplace=True)

df_test

#change datatype
df['Amount'] = df['Amount'].astype ('int')

df['Amount'].dtypes

df.columns

#rename column
df.rename(columns = {'Marital_Status':'Shaadi'})

df.describe()

# specific describe
df[['Age', 'Orders', 'Amount']].describe()

"""Exploratory data analysis"""

df.columns

ax = sns.countplot(x='Gender', data=df)

ax = sns.countplot(x='Gender', data=df)
for bars in ax.containers:
    ax.bar_label(bars)

sales_gen = df.groupby(['Gender'], as_index=False)['Amount'].sum().sort_values(by='Amount', ascending=False)
sales_gen

sales_gen = df.groupby(['Gender'], as_index=False)['Amount'].sum().sort_values(by='Amount', ascending=False)
sns.barplot(x='Gender', y='Amount', data=sales_gen)

"""Age"""

ax = sns.countplot(data=df, x='Age Group', hue='Gender')
for bars in ax.containers:
    ax.bar_label(bars)

# Total Amount vs Age group
sales_age = df.groupby(['Age Group'], as_index=False)['Amount'].sum().sort_values(by='Amount', ascending=False)
sns.barplot(x='Age Group', y='Amount', data=sales_age)

"""State"""

#total number of orders from top 10 states
sales_state = df.groupby(['State'], as_index=False)['Orders'].sum().sort_values(by='Orders', ascending=False).head(10)
sns.set(rc={'figure.figsize':(20,5)})
sns.barplot(x='State', y='Orders', data=sales_state)

#total number of amount from top 10 states
sales_state = df.groupby(['State'], as_index=False)['Amount'].sum().sort_values(by='Amount', ascending=False).head(10)
sns.set(rc={'figure.figsize':(20,5)})
sns.barplot(x='State', y='Amount', data=sales_state)

"""Marital status"""

ax = sns.countplot(data=df, x='Marital_Status')
sns.set(rc={'figure.figsize':(7,5)})
for bars in ax.containers:
    ax.bar_label(bars)

sales_state = df.groupby(['Marital_Status', 'Gender'], as_index=False)['Amount'].sum().sort_values(by='Amount', ascending=False)
sns.set(rc={'figure.figsize':(6,5)})
sns.barplot(data=sales_state, x='Marital_Status', y='Amount', hue='Gender')

"""Occupation"""

sns.set(rc={'figure.figsize':(22,5)})
ax = sns.countplot(data=df, x='Occupation')
for bars in ax.containers:
    ax.bar_label(bars)

sales_state = df.groupby(['Occupation'], as_index=False)['Amount'].sum().sort_values(by='Amount', ascending=False)
sns.set(rc={'figure.figsize':(22,5)})
sns.barplot(x='Occupation', y='Amount', data=sales_state)

"""Product category"""

sns.set(rc={'figure.figsize':(32,5)})
ax = sns.countplot(data=df, x='Product_Category')
for bars in ax.containers:
    ax.bar_label(bars)

sales_state = df.groupby(['Product_Category'], as_index=False)['Amount'].sum().sort_values(by='Amount', ascending=False).head(10)
sns.set(rc={'figure.figsize':(22,5)})
sns.barplot(x='Product_Category', y='Amount', data=sales_state)

sales_state = df.groupby(['Product_ID'], as_index=False)['Orders'].sum().sort_values(by='Orders', ascending=False).head(10)
sns.set(rc={'figure.figsize':(22,5)})
sns.barplot(x='Product_ID', y='Orders', data=sales_state)

# total 10 top most product sold
fig1, ax1 = plt.subplots(figsize=(12,7))
df.groupby('Product_ID')['Orders'].sum().nlargest(10).sort_values(ascending=False).plot(kind='bar')